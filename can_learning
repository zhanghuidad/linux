1.c++的union用法，它是一个联合体，节约内存用的，所有数据类型都可以在里面定义。
	https://www.cnblogs.com/jeakeven/p/5113508.html
2.ireq结构定义在/usr/include/net/if.h，用来配置ip地址，激活接口，配置MTU等接口信息的。其中包含了一个接口的名字和具体内容——（是个共用体，有可能是IP地址，广播地址，子网掩码，MAC号，MTU或其他内容）。ifreq包含在ifconf结构中。而ifconf结构通常是用来保存所有接口的信息的。
	https://blog.csdn.net/zhu114wei/article/details/6927513
3.ioctl是设备驱动程序中对设备的I/O通道进行管理的函数。所谓对I/O通道进行管理，就是对设备的一些特性进行控制，例如串口的传输波特率、马达的转速等等
	https://blog.csdn.net/Brouce__Lee/article/details/81110710
4.AF_can 地址族 简单来说就是底层是使用的哪种通信协议来递交数据的，如 AF_INET 用的是 TCP/IPv4；AF_INET6使用的是 TCP/IPv6；而 AF_LOCAL 或者 AF_UNIX 则指的是本地通信（即本次通信是在当前主机上的进程间的通信），一般用绝对路径的形式来指明
5.今天了解了移位操作， 首先在计算机中整数和float的存储方式不一样，整数就是分为有无符号位，float和doule遵循那个指数规则，（具体规则 https://www.cnblogs.com/mukekeheart/p/10517298.html）;
所以在计算机中只有整数可以进行以为操作，>>是右移，<<是左移，比如7,存为111左移一位就是011,就会输出3。
下面是C编程中如何提取二进制中的某一位或者连续几位
提取某一位：右移（n-1）位，然后与上1
提取连续位：右移（n-1）位，然后与上m个二进制1，m位连续几位的“几”。
例如
提取a的第三位
(a>>2)&1
提取a的第四至六位
(a>>3)&7
int main()
{   
     int b;
     uint32_t a = 6;
     for(int i = 0;i<=31;i++)
     {
     // // a = (a>>i)&1;
     // // a = a>>1;
     // // a = (a>>1)&1;
     b = (a>>i)&1;
     cout << b <<endl;
     }
     a = (a>>2)&1;
}

6.在计算机中，float类型存储方式见上文，我现在想转成16进制形式 ，例如1.0转为3f 80 00 00,
后来发现原来计算机存的都是指数规则的二进制，你只要把它以16进制读出就ok读出来就行
    float b =1.0; 
    long *p=&b; 新的指针p指向b的地址;而且只能是int，long，可能那个存的是10101110110,那东西就当是整数了。
    printf("%x",*p);  再去p地址的值就是那种二进制，以16进制输出就是3f800000
  结果就是3f800000,
#include <stdio.h>
long FloatTohex(float HEX)//浮点数到十六进制转换1
{   
    return *( long *)&HEX;
}
void main（）
{
    float Hdecimal=0.1;
    long hX=FloatTohex(Hdecimal);//浮点数转换为十六进制一
    printf("\n正序十六进制值：\n %f=%X\n",Hdecimal,hX);//正序显示
}



